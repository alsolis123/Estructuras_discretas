
package estructuras_discretas;

import java.util.Scanner;
import javax.swing.JOptionPane;

//comentario comentario

public class Traductor extends javax.swing.JFrame {

    
    public Traductor() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        entrada = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        salida = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cifrar = new javax.swing.JButton();
        descifrar = new javax.swing.JButton();
        clave = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        entrada.setColumns(20);
        entrada.setRows(5);
        jScrollPane1.setViewportView(entrada);

        salida.setColumns(20);
        salida.setRows(5);
        jScrollPane2.setViewportView(salida);

        jLabel1.setText("Ingrese el texto que quiere encriptar");

        jLabel2.setText("La traduccion es:");

        cifrar.setText("Cifrar");
        cifrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cifrarActionPerformed(evt);
            }
        });
        cifrar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cifrarKeyTyped(evt);
            }
        });

        descifrar.setText("Descifrar");
        descifrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descifrarActionPerformed(evt);
            }
        });

        jLabel3.setText("Clave");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 548, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cifrar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(descifrar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3)))
                        .addGap(18, 18, 18)
                        .addComponent(clave, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cifrar)
                        .addComponent(descifrar)
                        .addComponent(clave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3))
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cifrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cifrarActionPerformed
        cifrar();
    }//GEN-LAST:event_cifrarActionPerformed

    private void descifrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descifrarActionPerformed
       descifrar();
    }//GEN-LAST:event_descifrarActionPerformed

    private void cifrarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cifrarKeyTyped
        
    }//GEN-LAST:event_cifrarKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Traductor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Traductor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Traductor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Traductor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Traductor().setVisible(true);
            }
        });
        
        
    }
    
    public void cifrar(){
        
//        Declaracion de matrices
        char abc[] = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n','ñ', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '0', '1', '2', '3', '4', '5','6','7','8','9', ' ', '́', '.', ',', 'A', 'Y', 'C', 'E', 'M'};
        char abc2[] = {'w', 'n', 'y', '!', '@', '#', '$', '%', '^', '&', '*', '(', ')', '_','-', 'O', '=', '+', '{', '}', '[', ']', '"', ';', ':', '?', '>', '<', ',', '.', '/', '~', '`','h','t','p','b', 'x','P', 'F', 'Y', 'R', '2', 'a', 'L', 'A'};
        
//        Declaracion de variables
        int numero1 = 3, numero2 = 31, numero3 = 37, largo, cont = 0, ubicacion = 0, i =0;;
        String Frase, output = "";
        char temporal, nueva=' ';
        
        try{
//            *******Primer metodo**********

//            Obtencion de datos
            Frase = entrada.getText();
            
//            Vueltas del ciclo
            largo = Frase.length()-1;
            
            
            
            while (largo >= 0){
                
//              Extraccion letra por letra de la frase u oracion
                temporal = Frase.charAt(cont);
                
                for (i = 0; i < abc.length; i++) {

              

                    if(abc[i]==temporal){

                        ubicacion = numero1 * i % 46;
                        nueva = abc[ubicacion];
                    }
  
                }
                output = output + nueva;
                largo--;
                cont++;
        
            }
//            *******Segundo metodo**********
            cont = 0;
            Frase = output;
            output = "";
            largo = Frase.length()-1;
            
             while (largo >= 0){
                
//              Extraccion letra por letra de la frase u oracion
                
                temporal = Frase.charAt(cont);
                
                for ( i = 0; i < abc.length; i++) {

    //                

                    if(abc[i]==temporal){

                        ubicacion = numero2 * i % 46;
                        nueva = abc2[ubicacion];
                    }
                     
                }
                output = output + nueva;
                largo--;
                cont++;
        
            }
            
            
           
                
//                *******Tercer metodo**********

            cont = 0;
            Frase = output;
            output = "";
            largo = Frase.length()-1;
//            
             while (largo >= 0){
//                
//              Extraccion letra por letra de la frase u oracion
//                
                temporal = Frase.charAt(cont);
                
                for ( i = 0; i < abc.length; i++) {

    //                

                    if(abc2[i]==temporal){

                        ubicacion = numero3 * i % 46;
                        nueva = abc2[ubicacion];
                    }
                      
                }
                output = output + nueva;
                largo--;
                cont++;
        
            }
            salida.setText(output);    
            
//            
            
            
            
        }catch(Exception e){
            System.out.println(e);
        }
        
        
    }
    public void descifrar(){
        
//        Declaracion de matrices
        char abc[] = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n','ñ', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '0', '1', '2', '3', '4', '5','6','7','8','9', ' ', '́', '.', ',', 'A', 'Y', 'C', 'E', 'M'};
        char abc2[] = {'w', 'n', 'y', '!', '@', '#', '$', '%', '^', '&', '*', '(', ')', '_','-', 'O', '=', '+', '{', '}', '[', ']', '"', ';', ':', '?', '>', '<', ',', '.', '/', '~', '`','h','t','p','b', 'x','P', 'F', 'Y', 'R', '2', 'a', 'L', 'A'};
        
//        Declaracion de variables
        int numero1 = 31, numero2 = 3, numero3 = 5, largo, cont = 0, ubicacion = 0, i =0;
        String Frase, output = "";
        char temporal, nueva=' ';   
        
        try{
            
//            *******Primer metodo**********

//            Obtencion de datos
            Frase = entrada.getText();
            
//            Vueltas del ciclo
            largo = Frase.length()-1;          
            
            while (largo >= 0){
                
//              Extraccion letra por letra de la frase u oracion
                
                temporal = Frase.charAt(cont);
                
                for ( i = 0; i < abc.length; i++) {

    //                

                    if(abc2[i]==temporal){

                        ubicacion = numero3 * i % 46;
                        nueva = abc2[ubicacion];
                    }
                     
                }
                output = output + nueva;
                largo--;
                cont++;
        
            }
            
            //            *******Segundo metodo**********
            cont = 0;
            Frase = output;
            output = "";
            largo = Frase.length()-1;
            
             while (largo >= 0){
                
//              Extraccion letra por letra de la frase u oracion
                
                temporal = Frase.charAt(cont);
                
                for ( i = 0; i < abc.length; i++) {

    //                

                    if(abc2[i]==temporal){

                        ubicacion = numero2 * i % 46;
                        nueva = abc[ubicacion];
                    }
                     
                }
                output = output + nueva;
                largo--;
                cont++;
        
            }
//                *******Tercer metodo**********

//            Una condicion, si no cumple la condicion tirara otro texto encriptado hasta el metodo dos
//            si se cumple entonces aplicara el metodo 3 para completar el desencriptado

            if(clave.getText().equals("estructuras_discretas")){
            cont = 0;
            Frase = output;
            output = "";
            largo = Frase.length()-1;
            
            while (largo >= 0){
                
//              Extraccion letra por letra de la frase u oracion
                temporal = Frase.charAt(cont);
                
                for (i = 0; i < abc.length; i++) {

              

                    if(abc[i]==temporal){

                        ubicacion = numero1 * i % 46;
                        nueva = abc[ubicacion];
                    }
  
                }
                output = output + nueva;
                largo--;
                cont++;
        
            }
            }
            salida.setText(output);
            
            
            
            
            
        }catch(Exception e){
            System.out.println(e);
        }
        
        
        
        
        
    }
    
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cifrar;
    private javax.swing.JTextField clave;
    private javax.swing.JButton descifrar;
    private javax.swing.JTextArea entrada;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea salida;
    // End of variables declaration//GEN-END:variables
}
